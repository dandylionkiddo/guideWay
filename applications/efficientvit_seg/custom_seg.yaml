# model
model:
  name: segformer-b0 # 1. 모델 이름을 segformer-b0로 변경

# data provider (데이터셋 설정은 그대로 유지)
data_provider:
  task: seg
  dataset: mapillary 
  data_dir: D:\AIffel\EfficientViT\data\multi-class-segmentation
  # data_dir: D:\AIffel\EfficientViT\data\mapillary-vistas-dataset_public_v2.0\demo_training # \demo_training
  n_classes: 20 # 새로운 클래스 수
  class_definitions_file: D:\AIffel\EfficientViT\efficientvit\applications\efficientvit_seg\custom_class_definitions.json
  # class_mapping_path: D:\AIffel\EfficientViT\efficientvit\applications\efficientvit_seg\custom_class_mapping.json # 클래스 매핑 파일 경로
  
  # Color Augmentation
  # brightness: 0.1 # 밝기 변환 값 (0.1 = 10% 범위 내에서 랜덤 조절)
  # contrast: 0.1   # 대비 변환 값
  # saturation: 0.1 # 채도 변환 값
  # color_aug_hue: 0.1 # 색조 변환 증강 값. 0보다 크면 적용, 0.1은 -0.1에서 0.1 사이의 값으로 랜덤하게 변환

  # SegDataProvider가 데이터셋 구조를 파악하는 데 사용하는 정보
  train_split: training
  val_split: testing
  image_dir_name: images
  label_dir_name: labels
  image_suffix: .jpg
  label_suffix: .png

  # 데이터로더 설정
  base_batch_size: 1
  test_batch_size: 1
  n_worker: 8
  image_size: [[512, 512]] # [height, width] 직사각형 해상도 설정

# run config (SegFormer에 맞게 일부 하이퍼파라미터 조절)
run_config:
  n_epochs: 2
  base_lr: 0.001
  warmup_epochs: 10
  warmup_lr: 0.0
  lr_schedule_name: cosine
  lr_schedule_param: {}
  optimizer_name: adamw
  optimizer_params:
    betas: [0.9, 0.999]
    eps: 1.0e-08
  weight_decay: 0.01
  no_wd_keys: []
  grad_clip: null
  reset_bn: false
  reset_bn_size: 0
  reset_bn_batch_size: 0
  eval_image_size: [512]
  early_stopping_patience: 10
  early_stopping_metric: val_miou 
  # Loss Function
  loss:
    name: 'combo' # 'cross_entropy', 'focal', or 'dice'
    # focal_loss_alpha: 0.25 # Optional: for focal loss
    # focal_loss_gamma: 2.0 # Optional: for focal loss

# model init
model_init:
  rand_init: trunc_normal
  last_gamma: 0.0
#   # 사전 학습된 가중치를 사용하되, head 부분은 랜덤 초기화되므로 finetuning과 유사하게 동작
  init_from: D:\AIffel\EfficientViT\efficientvit\output\final_models\segformer-b0.pt
  # init_from: d:\AIffel\EfficientViT\efficientvit\output\from_runpod\checkpoint.pt
